{"version":3,"sources":["components/Player.tsx","components/Song.tsx","components/LibrarySong.tsx","components/Library.tsx","components/Nav.tsx","songs/gm.mp3","songs/iwonder.mp3","data.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Player","currentSong","isPlaying","setIsPlaying","audioRef","setSongInfo","songInfo","skipTrackHandler","getTime","songs","setCurrentSong","time","Math","floor","slice","animationPercentage","currentTime","duration","className","style","background","color","min","max","value","type","onChange","e","current","target","transform","onClick","size","icon","faAngleLeft","pause","play","faPause","faPlay","faAngleRight","Song","alt","name","src","cover","artist","LibrarySong","song","id","Library","libraryStatus","map","Nav","setLibraryStatus","colorSwitcher","faMusic","faCloudSun","chillHop","audio","mp3_file2","uuidv4","active","mp3_file1","App","useState","data","useRef","timeUpdateHandler","direction","currentIndex","findIndex","length","setColor","document","body","backgroundColor","console","log","getElementById","IsPlaying","onLoadedData","onTimeUpdate","onLoadedMetadata","onEnded","ref","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.23160261.chunk.js","sourcesContent":["import React from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faPlay,\n  faAngleLeft,\n  faAngleRight,\n  faPause,\n} from \"@fortawesome/free-solid-svg-icons\";\n\nconst Player = ({\n  currentSong,\n  isPlaying,\n  setIsPlaying,\n  audioRef,\n  setSongInfo,\n  songInfo,\n  skipTrackHandler,\n  songs,\n  setCurrentSong,\n}: any) => {\n  //Event Handlers\n  const playSongHandler = () => {\n    if (isPlaying) {\n      audioRef.current.pause();\n      setIsPlaying(!isPlaying);\n    } else {\n      audioRef.current.play();\n      setIsPlaying(!isPlaying);\n    }\n  };\n\n  const dragHandler = (e: any) => {\n    audioRef.current.currentTime = e.target.value;\n    setSongInfo({ ...songInfo, currentTime: e.target.value });\n  };\n\n  const getTime = (time: any) => {\n    return (\n      Math.floor(time / 60) + \":\" + (\"0\" + Math.floor(time % 60)).slice(-2)\n    );\n  };\n\n  const trackAnim = {\n    transform: `translateX(${songInfo.animationPercentage}%)`,\n  };\n  const animationPercentage = (songInfo.currentTime / songInfo.duration) * 100;\n  return (\n    <div className=\"player\">\n      <div className=\"time-control\">\n        <p>{getTime(songInfo.currentTime)}</p>\n        <div\n          style={{\n            background: `linear-gradient(to right, ${currentSong.color[0]},${currentSong.color[1]})`,\n          }}\n          className=\"track\"\n        >\n          <input\n            min={0}\n            max={songInfo.duration || 0}\n            value={songInfo.currentTime!}\n            type=\"range\"\n            onChange={dragHandler}\n          />\n\n          <div\n            style={{ transform: `translateX(${animationPercentage}%)` }}\n            className=\"animate-track\"\n          ></div>\n        </div>\n        <p>{getTime(songInfo.duration)}</p>\n      </div>\n      <div className=\"play-control\">\n        <FontAwesomeIcon\n          onClick={() => skipTrackHandler(\"back\")}\n          className=\"skipBack\"\n          size=\"2x\"\n          icon={faAngleLeft}\n        />\n        <FontAwesomeIcon\n          onClick={playSongHandler}\n          className=\"play\"\n          size=\"2x\"\n          icon={isPlaying ? faPause : faPlay}\n        />\n        <FontAwesomeIcon\n          onClick={() => skipTrackHandler(\"forward\")}\n          className=\"skipForward\"\n          size=\"2x\"\n          icon={faAngleRight}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default Player;\n","import React from \"react\";\n\nconst Song = ({ currentSong, isPlaying }: any) => {\n  return (\n    <div className=\"song-container\">\n      <img\n        className={isPlaying ? \"imageOff\" : \"imageOn\"}\n        alt={currentSong.name}\n        src={currentSong.cover}\n      ></img>\n      <h2>{currentSong.name}</h2>\n      <h3>{currentSong.artist}</h3>\n    </div>\n  );\n};\n\nexport default Song;\n","import React from \"react\";\nimport { idText } from \"typescript\";\nimport Song from \"./Song\";\n\nconst LibrarySong = ({\n  song,\n  setCurrentSong,\n  currentSong,\n  songs,\n  id,\n  isPlaying,\n  audioRef,\n}: any) => {\n  const songSelectHandler = () => {\n    setCurrentSong(song);\n  };\n\n  return (\n    <div\n      onClick={songSelectHandler}\n      className={`library-song ${song.id === currentSong.id ? \"selected\" : \"\"}`}\n    >\n      <img alt={Song.name} src={song.cover}></img>\n      <div className=\"song-description\">\n        <h3>{song.name}</h3>\n        <h4>{song.artist}</h4>\n      </div>\n    </div>\n  );\n};\n\nexport default LibrarySong;\n","import React from \"react\";\nimport LibrarySong from \"./LibrarySong\";\n\nconst Library = ({\n  songs,\n  setCurrentSong,\n  isPlaying,\n  audioRef,\n  currentSong,\n  libraryStatus,\n}: any) => {\n  return (\n    <div className={`library ${libraryStatus ? \"active-library\" : \"\"}`}>\n      <h2>Library</h2>\n      <div className=\"library-songs\">\n        {songs.map((song: any) => (\n          <LibrarySong\n            song={song}\n            currentSong={currentSong}\n            setCurrentSong={setCurrentSong}\n            isPlaying={isPlaying}\n            audioRef={audioRef}\n            songs={songs}\n            key={song.id}\n          />\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default Library;\n","import React, { useState } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faMusic, faCloudSun } from \"@fortawesome/free-solid-svg-icons\";\n\nconst Nav = ({ setLibraryStatus, libraryStatus, colorSwitcher }: any) => {\n  return (\n    <nav>\n      <h1>Music Player</h1>\n      <div className=\"theTwo\">\n        <button onClick={() => setLibraryStatus(!libraryStatus)}>\n          Library\n          <FontAwesomeIcon icon={faMusic} />\n        </button>\n\n        <button onClick={() => colorSwitcher()}>\n          <FontAwesomeIcon icon={faCloudSun} />\n        </button>\n      </div>\n    </nav>\n  );\n};\n\nexport default Nav;\n","export default __webpack_public_path__ + \"static/media/gm.c548d46a.mp3\";","export default __webpack_public_path__ + \"static/media/iwonder.e2694bb1.mp3\";","import { v4 as uuidv4 } from \"uuid\";\nimport React, { Component } from \"react\";\nimport mp3_file1 from \"./songs/gm.mp3\";\nimport mp3_file2 from \"./songs/iwonder.mp3\";\nfunction chillHop() {\n  return [\n    {\n      name: \"I Wonder\",\n      cover:\n        \"https://upload.wikimedia.org/wikipedia/en/7/70/Graduation_%28album%29.jpg\",\n      artist: \"Kanye West\",\n      audio: mp3_file2,\n      color: [\"#713389\", \"#B45A64\"],\n      id: uuidv4(),\n      active: true,\n    },\n    {\n      name: \"Good Morning\",\n      cover:\n        \"https://upload.wikimedia.org/wikipedia/en/7/70/Graduation_%28album%29.jpg\",\n      artist: \"Kanye West\",\n      audio: mp3_file1,\n      color: [\"#713389\", \"#B45A64\"],\n      id: uuidv4(),\n      active: false,\n    },\n    {\n      name: \"Keep Going\",\n      cover:\n        \"https://chillhop.com/wp-content/uploads/2020/07/ff35dede32321a8aa0953809812941bcf8a6bd35-1024x1024.jpg\",\n      artist: \"Swørn\",\n      audio: \"https://mp3.chillhop.com/serve.php/?mp3=9222\",\n      color: [\"#CD607D\", \"#c94043\"],\n      id: uuidv4(),\n      active: false,\n    },\n    {\n      name: \"Nightfall\",\n      cover:\n        \"https://chillhop.com/wp-content/uploads/2020/07/ef95e219a44869318b7806e9f0f794a1f9c451e4-1024x1024.jpg\",\n      artist: \"Aiguille\",\n      audio: \"https://mp3.chillhop.com/serve.php/?mp3=9148\",\n      color: [\"#EF8EA9\", \"#ab417f\"],\n      id: uuidv4(),\n      active: false,\n    },\n    {\n      name: \"Reflection\",\n      cover:\n        \"https://chillhop.com/wp-content/uploads/2020/07/ff35dede32321a8aa0953809812941bcf8a6bd35-1024x1024.jpg\",\n      artist: \"Swørn\",\n      audio: \"https://mp3.chillhop.com/serve.php/?mp3=9228\",\n      color: [\"#CD607D\", \"#c94043\"],\n      id: uuidv4(),\n      active: false,\n    },\n    {\n      name: \"Under the City Stars\",\n      cover:\n        \"https://chillhop.com/wp-content/uploads/2020/09/0255e8b8c74c90d4a27c594b3452b2daafae608d-1024x1024.jpg\",\n      artist: \"Aso, Middle School, Aviino\",\n      audio: \"https://mp3.chillhop.com/serve.php/?mp3=10074\",\n      color: [\"#205950\", \"#2ab3bf\"],\n      id: uuidv4(),\n      active: false,\n    },\n    //ADD MORE HERE\n  ];\n}\n\nexport default chillHop;\n","import React, { useState, useRef } from \"react\";\n//Adding componenets\nimport Player from \"./components/Player\";\nimport Song from \"./components/Song\";\nimport Library from \"./components/Library\";\nimport Nav from \"./components/Nav\";\n//util\nimport data from \"./data\";\n//styles\nimport \"./styles/App.scss\";\nfunction App() {\n  //state\n  const [songs, setSongs] = useState(data());\n  const [currentSong, setCurrentSong] = useState(songs[0]);\n  const [isPlaying, setIsPlaying] = useState(false);\n  const audioRef: any = useRef();\n  const timeUpdateHandler = (e: any) => {\n    const current = e.target.currentTime;\n    const duration = e.target.duration;\n    //calculate percentage\n    setSongInfo({\n      ...songInfo,\n      currentTime: current,\n      duration: duration,\n    });\n  };\n  const autoPlayHandler = () => {\n    if (isPlaying) {\n      audioRef.current.play();\n    }\n  };\n  const skipTrackHandler = (direction: any) => {\n    let currentIndex = songs.findIndex(\n      (song: any) => song.id === currentSong.id\n    );\n    if (direction === \"back\") {\n      if (currentIndex !== 0) {\n        setCurrentSong(songs[currentIndex - 1]);\n      }\n    } else {\n      if (currentIndex !== songs.length - 1)\n        setCurrentSong(songs[currentIndex + 1]);\n    }\n  };\n  const [songInfo, setSongInfo] = useState({\n    currentTime: 0,\n    duration: 0,\n    animationPercentage: 0,\n  });\n  const [libraryStatus, setLibraryStatus] = useState(false);\n  const [color, setColor] = useState(false);\n  const colorSwitcher = () => {\n    setColor(!color);\n    if (color === false) {\n      {\n        document.body.style.backgroundColor = \"rgb(27, 27, 27)\";\n      }\n    } else {\n      document.body.style.backgroundColor = \"rgb(239, 239, 253)\";\n\n      console.log(document.getElementById(\"dark\")?.style.color);\n    }\n  };\n  return (\n    <div\n      className={`App ${libraryStatus ? \"library-active\" : \"\"}`}\n      id={color ? \"dark\" : \"\"}\n    >\n      <Nav\n        color={color}\n        setColor={setColor}\n        libraryStatus={libraryStatus}\n        setLibraryStatus={setLibraryStatus}\n        colorSwitcher={colorSwitcher}\n      />\n      <Song currentSong={currentSong} isPlaying={isPlaying} />\n      <Player\n        skipTrackHandler={skipTrackHandler}\n        songs={songs}\n        setSongInfo={setSongInfo}\n        songInfo={songInfo}\n        isPlaying={isPlaying}\n        setIsPlaying={setIsPlaying}\n        currentSong={currentSong}\n        setCurrentSong={setCurrentSong}\n        audioRef={audioRef}\n      />\n      <Library\n        libraryStatus={libraryStatus}\n        songs={songs}\n        audioRef={audioRef}\n        setCurrentSong={setCurrentSong}\n        currentSong={currentSong}\n        IsPlaying={isPlaying}\n      />\n      <audio\n        onLoadedData={autoPlayHandler}\n        onTimeUpdate={timeUpdateHandler}\n        onLoadedMetadata={timeUpdateHandler}\n        onEnded={() => skipTrackHandler(\"skip-forward\")}\n        ref={audioRef}\n        src={currentSong.audio}\n      ></audio>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}